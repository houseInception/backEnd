name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Start MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mysql version: '8.0'
        mysql database: 'gpt_service'
        mysql root password: ${{ secrets.MYSQL_PASSWORD }}
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

    - name: Build with Gradle Wrapper
      working-directory: gptComm
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
        MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        MYSQL_URL: ${{ secrets.MYSQL_URL }}
      run: ./gradlew build

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
    
    - name: Build Docker image
      working-directory: gptComm
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gpt-service:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gpt-service:latest

    - name: Add SSH key
      run: echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/ssh_key.pem && chmod 600 /tmp/ssh_key.pem
      
    - name: Pull Docker image on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
        docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
        docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gpt-service:latest
